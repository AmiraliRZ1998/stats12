0.176816217839622, 0.000782635244126341, -0.00321956338925079,
0.540610673607387, 1.04106892458062, 0.441841420837874, 0.306623788337702,
-0.330595674515179, -0.144718519012785, -0.0936861846956196,
-0.182265141187823, -0.20161078395035, -0.352112030741094, 0.113020575582962,
0.209579831702855, -0.000323394790083759, 0.00133036434819877,
0.354540574194474, 0.441841420837874, 1.06543957021052, 0.714753970811323,
-0.425997977878528, -0.0202180308282105, -0.289407024543535,
-0.355482322054864, -0.329902381574614, -0.145289050831879, 0.0464359094020067,
0.142092648657975, -0.000408222156598238, 0.00167932267289203,
-0.418224448760752, 0.306623788337702, 0.714753970811323, 1.16926646816891,
-0.158187625213991, -0.0522298716706525, -0.163119542731185,
-0.15509988410879, -0.115825266403335, -0.135410721491494, 0.0235662371787153,
0.110551473728091, 0.000656540949602986, -0.00270084336317399,
-0.110157201766084, -0.330595674515179, -0.425997977878528, -0.158187625213991,
1.01032853403412, 0.57227686371696, -0.138181222665062, -0.0638491485730985,
-0.164147493089818, 0.346074067952301, 0.0934703054529341, -0.00480419432212636,
0.000162179402669701, -0.000667165031532492, 0.466215420045441,
-0.144718519012785, -0.0202180308282105, -0.0522298716706525,
0.57227686371696, 1.0744125114132, -0.108040529800258, -0.166509688023466,
-0.0425501980013655, 0.0936964080630921, 0.0575265525782534,
0.0128950848351599, -0.000435310692222213, 0.00179075805510869,
-0.11948043383773, -0.0936861846956196, -0.289407024543535, -0.163119542731185,
-0.138181222665062, -0.108040529800258, 1.00648033871841, 0.345127916158406,
0.507443243555408, -0.224811263693005, -0.194827834911217, 0.00380539791959295,
-0.000128462156219641, 0.10052846079513, -0.370317603185061,
-0.182265141187823, -0.355482322054864, -0.15509988410879, -0.0638491485730985,
-0.166509688023466, 0.345127916158406, 1.00366295637123, 0.489440488422261,
-0.18638276946564, 0.296111434665776, -0.002860994982591, 9.65811177076004e-05,
0.0996026897080804, -0.393499959410176, -0.20161078395035, -0.329902381574614,
-0.115825266403335, -0.164147493089818, -0.0425501980013655,
0.507443243555408, 0.489440488422261, 1.02433084378959, -0.260677360205115,
0.189978052765449, -0.00737360396895867, 0.000248917218378459,
0.0989760174844177, -0.180688140322514, -0.352112030741094, -0.145289050831879,
-0.135410721491494, 0.346074067952301, 0.0936964080630921, -0.224811263693005,
-0.18638276946564, -0.260677360205115, 1.00357207511796, -0.00384002288744572,
-0.00282528012801318, 9.53754600275544e-05, 0.0496076494830975,
0.0684894071020624, 0.113020575582962, 0.0464359094020067, 0.0235662371787153,
0.0934703054529341, 0.0575265525782534, -0.194827834911217, 0.296111434665776,
0.189978052765449, -0.00384002288744572, 1.00412806952211, 0.00303720932501062,
-0.000102529739866179, 0.100421781400443, 0.176816217839622,
0.209579831702855, 0.142092648657975, 0.110551473728091, -0.00480419432212636,
0.0128950848351599, 0.00380539791959295, -0.002860994982591,
-0.00737360396895867, -0.00282528012801318, 0.00303720932501062,
1.00223461344069, -7.54358099074355e-05, 0.000310323836851852,
0.000782635244126341, -0.000323394790083759, -0.000408222156598238,
0.000656540949602986, 0.000162179402669701, -0.000435310692222213,
-0.000128462156219641, 9.65811177076004e-05, 0.000248917218378459,
9.53754600275544e-05, -0.000102529739866179, -7.54358099074355e-05,
1.0000025465527, 0.399989524125558, -0.00321956338925079, 0.00133036434819877,
0.00167932267289203, -0.00270084336317399, -0.000667165031532492,
0.00179075805510869, 0.10052846079513, 0.0996026897080804, 0.0989760174844177,
0.0496076494830975, 0.100421781400443, 0.000310323836851852,
0.399989524125558, 1.00004309509337), dim = c(14L, 14L), dimnames = list(
c("LSTS", "RSTS", "LIPL", "RIPL", "mPFC", "LTPJ", "Contagion",
"Understanding", "Support", "Age", "Sex", "Situation", "SitxFocus",
"Coins"), c("LSTS", "RSTS", "LIPL", "RIPL", "mPFC", "LTPJ",
"Contagion", "Understanding", "Support", "Age", "Sex", "Situation",
"SitxFocus", "Coins")))
df <- data.frame(mvtnorm::rmvnorm(sigma = mat, n = 32))
names(df) <- rownames(mat)
df$Sex <- cut(df$SitxFocus, 2)
levels(df$Sex)
levels(df$Sex) <- c("Male", "Female")
df <- data.frame(mvtnorm::rmvnorm(sigma = mat, n = 32))
names(df) <- rownames(mat)
df$Sex <- cut(df$Sex, 2)
levels(df$Sex) <- c("Male", "Female")
df$Situation <- cut(df$Situation, 2)
df$Situation <- cut(df$Situation, 2)
df <- data.frame(mvtnorm::rmvnorm(sigma = mat, n = 32))
names(df) <- rownames(mat)
df$Sex <- cut(df$Sex, 2)
levels(df$Sex) <- c("Male", "Female")
df$Situation <- cut(df$Situation, 2)
levels(df$Situation) <- c("Positive", "Negative")
df$Focus <- "A"
df$SitxFocus <- as.integer(cut(df$SitxFocus, 2))-1
df$Focus[df$Situation == "Positive"] <- sample(c("A", "B"), size = length(df$Focus[df$Situation == 0]), replace = TRUE)
df$Focus[df$Situation == "Positive"] <- sample(c("A", "B"), size = length(df$Focus[df$Situation == "Positive"]), replace = TRUE)
df$Focus
df$SitxFocus
df$Focus[df$Situation == "Negative"] <- c("A", "B")[df$SitxFocus[df$Situation == "Negative"]+1]
df$
df$Focus
df$Focus
table(df$Focus)
df[["SitxFocus"]] <- NULL
tidySEM::descriptives(df[c("LSTS", "RSTS", "LIPL", "RIPL", "mPFC", "LTPJ")])
df[c("Contagion", "Understanding", "Support")] <- lapply(df[c("Contagion", "Understanding", "Support")], cut, labels = 1:6)
df[c("Contagion", "Understanding", "Support")] <- lapply(df[c("Contagion", "Understanding", "Support")], cut, breaks = 6, labels = 1:6)
df$Age <- scale(df$Age)
df$Age <- (df$Age*2.09)+15.5
df$Coins <- cut(df$Coins, 4, c("Very unfair", "Unfair", "Fair", "Prosocial"))
df$Coins
tidySEM::descriptives(df)
df$Age <- as.numeric(df$Age)
tidySEM::descriptives(df)
tmp = tidySEM::descriptives(df)
View(tmp)
table(df$Situation, df$Focus)
haven::write_sav(df, "cn.sav")
df$Coins <- as.integer(df$Coins)
summary(lm(Coins ~ Situation*Focus, df))
df <- data.frame(mvtnorm::rmvnorm(sigma = mat, n = 1000))
names(df) <- rownames(mat)
df$Sex <- cut(df$Sex, 2)
levels(df$Sex) <- c("Male", "Female")
df$Situation <- cut(df$Situation, 2)
levels(df$Situation) <- c("Positive", "Negative")
df$Focus <- "A"
df$SitxFocus <- as.integer(cut(df$SitxFocus, 2))-1
df$Focus[df$Situation == "Positive"] <- sample(c("A", "B"), size = length(df$Focus[df$Situation == "Positive"]), replace = TRUE)
df$Focus[df$Situation == "Negative"] <- c("A", "B")[df$SitxFocus[df$Situation == "Negative"]+1]
df[["SitxFocus"]] <- NULL
df[c("Contagion", "Understanding", "Support")] <- lapply(df[c("Contagion", "Understanding", "Support")], cut, breaks = 6, labels = 1:6)
df$Age <- as.numeric(scale(df$Age))
df$Age <- (df$Age*2.09)+15.5
df$Coins <- cut(df$Coins, 4, labels = c("Very unfair", "Unfair", "Fair", "Prosocial"))
summary(lm(Coins ~ Situation*Focus, df))
df$Coins <- as.integer(df$Coins)
summary(lm(Coins ~ Situation*Focus, df))
min(df$Age)
max(df$Age)
runif(1, 9, 11)
runif(1, 9, 11)
runif(1, 9, 11)
df$Age <- scales::rescale(df$Age, to = c(runif(1, 9, 11), runif(1, 16, 19)))
mean(df$Age)
df$Age <- scales::rescale(df$Age, to = c(runif(1, 9, 11), runif(1, 18, 22)))
mean(df$Age)
df <- data.frame(mvtnorm::rmvnorm(sigma = mat, n = 32))
names(df) <- rownames(mat)
df$Sex <- cut(df$Sex, 2)
levels(df$Sex) <- c("Male", "Female")
df$Situation <- cut(df$Situation, 2)
levels(df$Situation) <- c("Positive", "Negative")
df$Focus <- "A"
df$SitxFocus <- as.integer(cut(df$SitxFocus, 2))-1
df$Focus[df$Situation == "Positive"] <- sample(c("A", "B"), size = length(df$Focus[df$Situation == "Positive"]), replace = TRUE)
df$Focus[df$Situation == "Negative"] <- c("A", "B")[df$SitxFocus[df$Situation == "Negative"]+1]
df[["SitxFocus"]] <- NULL
df[c("Contagion", "Understanding", "Support")] <- lapply(df[c("Contagion", "Understanding", "Support")], cut, breaks = 6, labels = 1:6)
df$Age <- scales::rescale(df$Age, to = c(runif(1, 9, 11), runif(1, 18, 22)))
df$Coins <- cut(df$Coins, 4, labels = c("Very unfair", "Unfair", "Fair", "Prosocial"))
mean(df$Age)
df <- data.frame(mvtnorm::rmvnorm(sigma = mat, n = 32))
names(df) <- rownames(mat)
df$Sex <- cut(df$Sex, 2)
levels(df$Sex) <- c("Male", "Female")
df$Situation <- cut(df$Situation, 2)
levels(df$Situation) <- c("Positive", "Negative")
df$Focus <- "A"
df$SitxFocus <- as.integer(cut(df$SitxFocus, 2))-1
df$Focus[df$Situation == "Positive"] <- sample(c("A", "B"), size = length(df$Focus[df$Situation == "Positive"]), replace = TRUE)
df$Focus[df$Situation == "Negative"] <- c("A", "B")[df$SitxFocus[df$Situation == "Negative"]+1]
df[["SitxFocus"]] <- NULL
df[c("Contagion", "Understanding", "Support")] <- lapply(df[c("Contagion", "Understanding", "Support")], cut, breaks = 6, labels = 1:6)
df$Age <- scales::rescale(df$Age, to = c(runif(1, 9, 11), runif(1, 18, 22)))
df$Coins <- cut(df$Coins, 4, labels = c("Very unfair", "Unfair", "Fair", "Prosocial"))
mean(df$Age)
sd(df$Age)
df <- readRDS("c:/tmp/WVS_Cross-National_Wave_7_rData_v5_0.rdata")
load("c:/tmp/WVS_Cross-National_Wave_7_rData_v5_0.rdata")
nmz <- read.table("clipboard", sep = "\n", col.names = F, row.names = F)
nmz <- read.table("clipboard", sep = "\n"
)
nmz <- as.vector(nmz)
nmz <- as.vector(nmz[[1]])
df <- df[, nmz]
nmz[!nmz %in% names(df)]
View(`WVS_Cross-National_Wave_7_v5_0`)
dput(names(df))
df <- `WVS_Cross-National_Wave_7_v5_0`
rm(`WVS_Cross-National_Wave_7_v5_0`)
nmz[!nmz %in% names(df)]
names(df) <- tolower(names(df))
nmz <- tolower(nmz)
nmz[!nmz %in% names(df)]
df <- df[, nmz]
dfnew <- df
ids <- apply(df[1:4], 1, paste, collapse="")
ids
ids <- apply(df[1:4,], 1, paste, collapse="")
ids
ids <- apply(df, 1, paste, collapse="")
library(digest)
ids <- apply(df, 1, digest)
length(unique(ids))
ids[duplicated(ids)][1]
which(ids == "fb3c87e4547c21a52362994a5e2f8be5")
tmp <- df[which(ids == "fb3c87e4547c21a52362994a5e2f8be5"), ]
View(tmp)
duplicated(ids)
df <- df[!duplicated(ids), ]
dfnew <- df
ids <- ids[!duplicated(ids)]
i=1
rowid <- ids[i]
rowid
rowid %in% ids
sample.int(ncol(dfnew), 1)
chngcol <- sample.int(ncol(dfnew), 1)
sample(df[[chngcol]], 1)
rowid <- digest(dfnew[i, ])
rowid
rowid %in% ids
dfnew <- df
rowid <- ids[i]
rowid
rowid <- digest(dfnew[i, ])
rowid
dfnew <- df
apply(df[1,,drop=FALSE], 1, digest)
apply(dfnew[1,,drop=FALSE], 1, digest)
digest(dfnew[1,,drop=FALSE])
apply(dfnew[1,,drop=FALSE], 1, digest)
rowid <- apply(dfnew[i,,drop=FALSE], 1, digest)
rowid
chngcol <- sample.int(ncol(dfnew), 1)
dfnew[i, chngcol] <- sample(df[[chngcol]], 1)
rowid <- apply(dfnew[i,,drop=FALSE], 1, digest)
rowid
rowid %in% ids
dfnew <- df
for(i in 1:nrow(df)){
rowid <- ids[i]
while(rowid %in% ids){
chngcol <- sample.int(ncol(dfnew), 1)
dfnew[i, chngcol] <- sample(df[[chngcol]], 1)
rowid <- apply(dfnew[i,,drop=FALSE], 1, digest)
}
}
ids2 <- apply(dfnew, 1, digest)
any(ids2 %in% ids)
View(dfnew)
attributes(df)
saveRDS(dfnew, "c:/tmp/dfnew.rdata")
load("c:/tmp/WVS_Cross-National_Wave_7_rData_v5_0.rdata")
attributes(`WVS_Cross-National_Wave_7_v5_0`)
names(attributes(`WVS_Cross-National_Wave_7_v5_0`))
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[1]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[1:10]
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[1:10]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)]
sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)
sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)
sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[1:100]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[sample.int(nrow(`WVS_Cross-National_Wave_7_v5_0`), size = 10)]
dfnew[] <- lapply(dfnew, function(i){i[i<0] <-NA})
View(dfnew)
table(dfnew$q277a)
dfnew <- readRDS("c:/tmp/dfnew.rdata")
dfnew[which(dfnew < 0)] <- NA
dfnew[] <- lapply(dfnew, function(i){i[which(i<0)] <- NA; i})
View(dfnew)
lapply(dfnew[, sample.int(ncol(dfnew), 10)], table)
n = names(dfnew)[10]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")
View(`WVS_Cross-National_Wave_7_v5_0`)
View(dfnew)
table(sapply(dfnew, function(i)class(i)[1]))
n  =names(dfnew)[1]
attributes(`WVS_Cross-National_Wave_7_v5_0`[[1]])
attributes(`WVS_Cross-National_Wave_7_v5_0`)
names(attributes(`WVS_Cross-National_Wave_7_v5_0`))
dput(names(attributes(`WVS_Cross-National_Wave_7_v5_0`)), "clipboard")
attr(`WVS_Cross-National_Wave_7_v5_0`[[1]], "label.table")
attr(`WVS_Cross-National_Wave_7_v5_0`[[1]], "names")
attr(`WVS_Cross-National_Wave_7_v5_0`[[1]], "val.labels")
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[1]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[1]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[1]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[n]
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
i
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "class")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "row.names")[i]
n = sample(names(dfnew))
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
n
n = sample(names(dfnew), 1)
n
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i]
n = sample(names(dfnew), 1)
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i]
n = sample(names(dfnew), 1)
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i]
n = sample(names(dfnew), 1)
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i]
n
table(df$q278)
n ="q278"
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i]
lbls <- attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i][[1]]
lbls
lbls
out <- factor(dfnew[[n]], levels = lbls, labels = names(lbls))
out
levels(out)
out <- relevel(out)
out <- droplevels(out)
levels(out)
checkthese <- vector("character")
for(n in names(dfnew)){
#n ="q278"
#n = sample(names(dfnew), 1)
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
lbls <- attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i][[1]]
if(!is.null(lbls)){
if(length(lbls) > 10) checkthese <- c(checkthese, n)
out <- factor(dfnew[[n]], levels = lbls, labels = names(lbls))
out <- droplevels(out)
dfnew <- out
}
}
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
i
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
lbls <- attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i][[1]]
lbls
(!is.null(lbls))
if(length(lbls) > 10) checkthese <- c(checkthese, n)
out <- factor(dfnew[[n]], levels = lbls, labels = names(lbls))
dfnew[[n]]
n %in% names(dfnew)
rm(n)
for(n in names(dfnew)){
#n ="q278"
#n = sample(names(dfnew), 1)
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
#attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
#attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
lbls <- attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i][[1]]
if(!is.null(lbls)){
if(length(lbls) > 10) checkthese <- c(checkthese, n)
out <- factor(dfnew[[n]], levels = lbls, labels = names(lbls))
out <- droplevels(out)
dfnew <- out
}
}
table(sapply(dfnew, function(i)class(i)[1])
)
head(dfnew)
dfnew <- readRDS("c:/tmp/dfnew.rdata")
dfnew[] <- lapply(dfnew, function(i){i[which(i<0)] <- NA; i})
checkthese <- vector("character")
checkthese
for(n in names(dfnew)){
#n ="q278"
#n = sample(names(dfnew), 1)
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
#attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
#attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
lbls <- attr(`WVS_Cross-National_Wave_7_v5_0`, "label.table")[i][[1]]
if(!is.null(lbls)){
if(length(lbls) > 10) checkthese <- c(checkthese, n)
out <- factor(dfnew[[n]], levels = lbls, labels = names(lbls))
out <- droplevels(out)
dfnew[[n]] <- out
}
}
table(sapply(dfnew, function(i)class(i)[1]))
checkthese
table(dfnew$q272)
table(dfnew$q274)
table(dfnew[[checkthese[3]]])
table(dfnew[[checkthese[4]]])
checkthese[4]
table(dfnew[[checkthese[5]]])
table(dfnew[[checkthese[6]]])
checkthese[6]
checkthese
table(dfnew[["q277"]])
table(dfnew[["q277a"]])
checkthese
table(dfnew$q278a)
checkthese
table(dfnew$q279)
table(dfnew$q280)
table(dfnew$q281)
table(dfnew$q282)
table(dfnew$q283)
checkthese
table(dfnew$q288)
table(dfnew$q289)
table(dfnew$q293)
table(dfnew$q294b)
dfnew[c("q272", "q275a", "q276a", "q277a", "q278a")] <- NULL
dfnew$q272
dfnew$q275a
dfnew$q276a
dfnew$q275
saveRDS(dfnew, "c:/tmp/dfnewclean.rdata")
haven::write_sav(dfnew, "c:/tmp/test.sav")
n ="q278"
attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
names(attributes(`WVS_Cross-National_Wave_7_v5_0`))
attr(`WVS_Cross-National_Wave_7_v5_0`, ""var.labels"")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]
table(sapply(dfnew, function(i)class(i)[1]))
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
(inherits(dfnew[[n]], "factor"))
levels(dfnew[[n]])
head(dfnew[[n]])
as.integer(head(dfnew[[n]]))
seq_along(levels(dfnew[[n]]))
lbls <- seq_along(levels(dfnew[[n]]))
names(lbls) <- levels(dfnew[[n]])
lbls
attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]
tmp = haven::labelled(x = as.integer(dfnew[[n]], labels = lbls, label = attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]))
tmp
attributes(tmp)
tmp2 <- unclass(tmp)
attributes(tmp2)
tmp2
attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]
for(n in names(dfnew)){
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
#names(attributes(`WVS_Cross-National_Wave_7_v5_0`))
#attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
#attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]
if(inherits(dfnew[[n]], "factor")){
lbls <- seq_along(levels(dfnew[[n]]))
names(lbls) <- levels(dfnew[[n]])
dfnew[[n]] <- haven::labelled(x = as.integer(dfnew[[n]], labels = lbls, label = attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]))
} else {
dfnew[[n]] <- haven::labelled(x = dfnew[[n]], label = attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]))
for(n in names(dfnew)){
i <- which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)
#names(attributes(`WVS_Cross-National_Wave_7_v5_0`))
#attr(`WVS_Cross-National_Wave_7_v5_0`, "names")[i]
#attr(`WVS_Cross-National_Wave_7_v5_0`, "val.labels")[i]
attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]
if(inherits(dfnew[[n]], "factor")){
lbls <- seq_along(levels(dfnew[[n]]))
names(lbls) <- levels(dfnew[[n]])
dfnew[[n]] <- haven::labelled(x = as.integer(dfnew[[n]], labels = lbls, label = attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i]))
} else {
dfnew[[n]] <- haven::labelled(x = dfnew[[n]], label = attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")[i])
}
}
haven::write_sav(dfnew, "c:/tmp/test2.sav")
install.packages("misty")
dfnew = readRDS("c:/tmp/dfnewclean.rdata")
varlabs <- attr(`WVS_Cross-National_Wave_7_v5_0`, "var.labels")
varatt <- sapply(names(dfnew), function(n){
varlabs[which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)]
})
varatt
varatt <- data.frame(label = sapply(names(dfnew), function(n){
varlabs[which(tolower(names(`WVS_Cross-National_Wave_7_v5_0`)) == n)]
}))
misty::write.sav(dfnew, file = "c:/tmp/test3.sav", var.attr = varatt)
varatt$var = names(dfnew)
varatt <- varatt[, c("var", "label")]
misty::write.sav(dfnew, file = "c:/tmp/test3.sav", var.attr = varatt)
varatt$values <- NA
varatt$missing <- NA
misty::write.sav(dfnew, file = "c:/tmp/test3.sav", var.attr = varatt)
dat <- data.frame(id = 1:5,
gender = c(NA, 0, 1, 1, 0),
age = c(16, 19, 17, NA, 16),
status = c(1, 2, 3, 1, 4),
score = c(511, 506, 497, 502, 491))
attr <- data.frame(# Variable names
var = c("id", "gender", "age", "status", "score"),
# Variable labels
label = c("Identification number", "Gender", "Age in years",
"Migration background", "Achievement test score"),
# Value labels
values = c("", "0 = female; 1 = male", "",
"1 = Austria; 2 = former Yugoslavia; 3 = Turkey; 4 = other",
""),
# User-missing values
missing = c("", "-99", "-99", "-99", "-99"), stringsAsFactors = FALSE)
attr
write.sav(dat, file = "c:/tmp/Dataframe_haven_Attr.sav", var.attr = attr)
misty::write.sav(dat, file = "c:/tmp/Dataframe_haven_Attr.sav", var.attr = attr)
dfnew <- readRDS("c:/tmp/dfnew.rdata")
