thesedeps <- get_deps(package = package)
tmp <- readRDS("shiny_data/varatt.rdata")
View(tmp)
library(kableExtra)
require(gridExtra)
library(tidySEM)
library(scales)
library(eulerr)
source("functions.r")
options(knitr.kable.NA = '')
# set.seed(2)
# n = 320
# condition <- sample.int(2, size = n, replace = T)
# performance <- rnorm(n)
#
# prosocial <- -4.23 + 4*condition*performance
#
# prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# res <- glm(prosocial ~ 1, family = "binomial")
# int1 <- exp(coef(res)[1])/(1+exp(coef(res)[1]))
# res <- glm(prosocial ~ condition*performance, family = "binomial")
# int2 <- exp(coef(res)[1])/(1+exp(coef(res)[1]))
# tmp <- summary(res)
# # cbind(tmp$coefficients[, 1], ifelse(tmp$coefficients[,4] < .05, "*", ""))
# # c(int1, int2)
# chimps <- data.frame(prosocial = prosocial, condition = ordered(condition, levels = c(1, 2), labels = c("Alone", "Together")), testscore = performance)
set.seed(2)
n = 320
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
performance <- scales::rescale(performance, c(0, 5))
prosocial <- NA
prosocial[condition == 1] <- -1.386294
prosocial[condition == 2] <- -2.19 + 2*performance[condition == 2]
probs <- exp(prosocial)/(1+exp(prosocial))
prosocial <- rbinom(n = n, size = 1, prob =  probs)
chimps <- data.frame(prosocial = prosocial, condition = ordered(condition, levels = c(1, 2), labels = c("Alone", "Together")), testscore = performance)
library(ggplot2)
df_together <- chimps[chimps$condition == "Together", ]
res <- lm(prosocial ~testscore, data = df_together)
p1 <- ggplot(data = df_together, aes(x = testscore, y = prosocial)) +
geom_jitter(width = .1, height = .1) +
geom_abline(intercept = coef(res)[1], slope = coef(res)[2], color = "blue", linewidth = 1) +
theme_bw() +
scale_x_continuous(limits = c(-2, 7))+
scale_y_continuous(breaks = c(0,1), limits = predict(res, newdata = data.frame(testscore = c(-2, 7)), type = "response"))
p1
p1
p1 + scale_y_continuous(limits = c(-1,2))
ggplot(data = df_together, aes(x = testscore, y = prosocial)) +
geom_jitter(width = .1, height = .1) +
geom_abline(intercept = coef(res)[1], slope = coef(res)[2], color = "blue", linewidth = 1) +
theme_bw() +
scale_x_continuous(limits = c(-2, 7))+
scale_y_continuous(breaks = c(-.1,1.1), limits = predict(res, newdata = data.frame(testscore = c(-2, 7)), type = "response"))
ggplot(data = df_together, aes(x = testscore, y = prosocial)) +
geom_jitter(width = .1, height = .1) +
geom_abline(intercept = coef(res)[1], slope = coef(res)[2], color = "blue", linewidth = 1) +
theme_bw() +
scale_x_continuous(limits = c(-2, 7))+
scale_y_continuous(breaks = c(-.5,1.5), limits = predict(res, newdata = data.frame(testscore = c(-2, 7)), type = "response"))
ggplot(data = df_together, aes(x = testscore, y = prosocial)) +
geom_jitter(width = .1, height = .1) +
geom_abline(intercept = coef(res)[1], slope = coef(res)[2], color = "blue", linewidth = 1) +
theme_bw() +
scale_x_continuous(limits = c(-2, 7))+
scale_y_continuous(breaks = c(-1,1.5), limits = predict(res, newdata = data.frame(testscore = c(-2, 7)), type = "response"))
ggplot(data = df_together, aes(x = testscore, y = prosocial)) +
geom_jitter(width = .1, height = .1) +
geom_abline(intercept = coef(res)[1], slope = coef(res)[2], color = "blue", linewidth = 1) +
theme_bw() +
scale_x_continuous(limits = c(-2, 7))+
scale_y_continuous(breaks = c(0,1), limits = c(-.1, 1.1))
df_plot <- data.frame(x = res$fitted.values, y = df_together$prosocial-res$fitted.values)
p2 <- ggplot(data = df_plot, aes(x = x, y = y)) +
geom_point()+
geom_hline(yintercept = 0)+
theme_bw() +
labs(x = "Predicted value", y = "Residual")
p2
res <- glm(prosocial ~testscore, data = df_together, family = "binomial")
df_line <- data.frame(testscore = df_together$testscore, prosocial = predict(res, type = "response"))
res$fitted.values
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')[, -1]
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
as.date(9/27/2023 11:18:52)
as.date("9/27/2023")
as.Date("9/27/2023")
as.Date("27-9-2023")
as.Date("27-09-2023", format = "%dd-%mm-%yyyy")
as.Date("9/27/2023", "%m/%d/%y")
as.Date("9/27/23", "%m/%d/%y")
port1$Timestamp < as.Date("9/27/23", "%m/%d/%y")
port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y"))
port1$Timestamp
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
View(port1)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
ids <- unlist(port1[,-1])
df <- read.csv("portfolio1.csv", stringsAsFactors = FALSE)
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
missing_students <- ids[!ids %in% df$SIS.User.ID]
missing_students
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
missing_students
stringdist::amatch("2095975", df$SIS.User.ID)
stringdist::stringdist("2095975", df$SIS.User.ID)
which.min(stringdist::stringdist("2095975", df$SIS.User.ID))
df$SIS.User.ID[which.min(stringdist::stringdist("2095975", df$SIS.User.ID))]
"2095979" %in% ids
df$SIS.User.ID[which.min(stringdist::stringdist("2018697", df$SIS.User.ID))]
"2081697" %in% ids
df$SIS.User.ID[which.min(stringdist::stringdist("2079528", df$SIS.User.ID))]
"2079526" %in% ids
"2079528" %in% ids
"2079528" %in% ids
missing_students <- ids[!ids %in% df$SIS.User.ID]
missing_students
df$SIS.User.ID[which.min(stringdist::stringdist("2079528", df$SIS.User.ID))]
stringdist::stringdist("2079528", df$SIS.User.ID)
df$SIS.User.ID[which.min(stringdist::stringdist("2079528", df$SIS.User.ID))]
"2079528" %in% ids
"2079526" %in% ids
"2079528" %in% df$SIS.User.ID
"2079526" %in% df$SIS.User.ID
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
missing_students
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
port1
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
# df$SIS.User.ID[which.min(stringdist::stringdist("2079528", df$SIS.User.ID))]
# "2079528" %in% df$SIS.User.ID
# "2079526" %in% df$SIS.User.ID
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
names(port1) <- c("group", paste0("member.", 1:4))
portlong <- do.call(rbind, lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])}))
portlong <- portlong[complete.cases(portlong),]
portlong <- portlong[!duplicated(portlong$SIS.User.ID, fromLast = TRUE), ]
grpsize <- table(portlong$group)
smallgroups <- names(grpsize)[grpsize < 4]
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
# df$SIS.User.ID[which.min(stringdist::stringdist("2079528", df$SIS.User.ID))]
# "2079528" %in% df$SIS.User.ID
# "2079526" %in% df$SIS.User.ID
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
names(port1) <- c("group", paste0("member.", 1:4))
portlong <- do.call(rbind, lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])}))
names(port1)
portlong <- do.call(rbind, lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])}))
View(port1)
port1[is.null(port1)]
port1[which(is.null(port1))]
which(is.null(port1))
tmp = lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])})
port1$group
paste0("member.", 1:4)
i="member.1"
data.frame(group = port1$group, SIS.User.ID = port1[[i]])
i="member.2"
data.frame(group = port1$group, SIS.User.ID = port1[[i]])
i="member.3"
data.frame(group = port1$group, SIS.User.ID = port1[[i]])
i="member.4"
data.frame(group = port1$group, SIS.User.ID = port1[[i]])
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
View(port1)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
View(port1)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
# df$SIS.User.ID[which.min(stringdist::stringdist("2079528", df$SIS.User.ID))]
# "2079528" %in% df$SIS.User.ID
# "2079526" %in% df$SIS.User.ID
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
names(port1) <- c("group", paste0("member.", 1:4))
portlong <- do.call(rbind, lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])}))
portlong <- portlong[complete.cases(portlong),]
portlong <- portlong[!duplicated(portlong$SIS.User.ID, fromLast = TRUE), ]
grpsize <- table(portlong$group)
smallgroups <- names(grpsize)[grpsize < 4]
smallgroups
df$SIS.User.ID[!df$SIS.User.ID %in% portlong$SIS.User.ID]
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
# df$SIS.User.ID[which.min(stringdist::stringdist("2079528", df$SIS.User.ID))]
# "2079528" %in% df$SIS.User.ID
# "2079526" %in% df$SIS.User.ID
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
names(port1) <- c("group", paste0("member.", 1:4))
portlong <- do.call(rbind, lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])}))
portlong <- portlong[complete.cases(portlong),]
portlong <- portlong[!duplicated(portlong$SIS.User.ID, fromLast = TRUE), ]
grpsize <- table(portlong$group)
smallgroups <- names(grpsize)[grpsize < 4]
df$SIS.User.ID[!df$SIS.User.ID %in% portlong$SIS.User.ID]
smallgroups
grpsize
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
names(port1) <- c("group", paste0("member.", 1:4))
View(port1)
portlong <- do.call(rbind, lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])}))
View(portlong)
portlong[portlong$group == "BELIs", ]
tmp = portlong[portlong$group == "BELIs", ]$SIS.User.ID
sapply(tmp, function(i) sum(i == portlong$SIS.User.ID))
sapply(tmp, function(i) sum(i == portlong$SIS.User.ID, na.rm = T))
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
port[[5]]
port1[[5]]
port1[[5]] <- unlist(port1[[5]])
View(port1)
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
missing_students
port1[port1 == "0"]
port1[port1 == "0"] <- NA
View(port1)
missing_students <- ids[!ids %in% df$SIS.User.ID]
missing_students
ids <- unlist(port1[,-1])
ids
ids <- unlist(port1[,-1])
missing_students <- ids[!ids %in% df$SIS.User.ID]
missing_students
missing_students <- na.omit(ids[!ids %in% df$SIS.User.ID])
missing_students
df$SIS.User.ID
df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
possiblematch
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
possiblematch
possiblematch %in% df$SIS.User.ID
possiblematch %in% ids
ids
possiblematch
possiblematch %in% ids
(possiblematch %in% df$SIS.User.ID & ! possiblematch %in% ids)
for(i in missing_students){
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
(possiblematch %in% df$SIS.User.ID & ! possiblematch %in% ids)
}
for(i in missing_students){
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
print(possiblematch %in% df$SIS.User.ID & ! possiblematch %in% ids)
}
port1[port1 == i]
for(i in missing_students){
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
if(possiblematch %in% df$SIS.User.ID & ! possiblematch %in% ids){
port1[port1 == i] <- possiblematch
} else {
print(i)
}
}
for(i in missing_students){
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
if(possiblematch %in% df$SIS.User.ID & ! possiblematch %in% ids){
port1[port1 == i] <- possiblematch
} else {
print(i)
}
}
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
port1[[5]] <- unlist(port1[[5]])
port1[port1 == "0"] <- NA
ids <- unlist(port1[,-1])
missing_students <- na.omit(ids[!ids %in% df$SIS.User.ID])
for(i in missing_students){
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
if(possiblematch %in% df$SIS.User.ID & ! possiblematch %in% ids){
port1[port1 == i] <- possiblematch
} else {
print(i)
}
}
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
names(port1) <- c("group", paste0("member.", 1:4))
portlong <- do.call(rbind, lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])}))
portlong
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
port1[[5]] <- unlist(port1[[5]])
port1[port1 == "0"] <- NA
ids <- unlist(port1[,-1])
missing_students <- na.omit(ids[!ids %in% df$SIS.User.ID])
for(i in missing_students){
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
if(possiblematch %in% df$SIS.User.ID & ! possiblematch %in% ids){
port1[port1 == i] <- possiblematch
} else {
print(i)
}
}
# df$SIS.User.ID[which.min(stringdist::stringdist("2079528", df$SIS.User.ID))]
# "2079528" %in% df$SIS.User.ID
# "2079526" %in% df$SIS.User.ID
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
names(port1) <- c("group", paste0("member.", 1:4))
portlong <- do.call(rbind, lapply(paste0("member.", 1:4), function(i){data.frame(group = port1$group, SIS.User.ID = port1[[i]])}))
portlong <- portlong[complete.cases(portlong),]
portlong <- portlong[!duplicated(portlong$SIS.User.ID, fromLast = TRUE), ]
portlong
grpsize <- table(portlong$group)
smallgroups <- names(grpsize)[grpsize < 4]
smallgroups
grpsize
as.matrix(port1[,-1])
as.vector(as.matrix(port1[,-1]))
as.vector(t(as.matrix(port1[,-1])))
portlong <- data.frame(group = rep(port1$group, each = 4),
SIS.User.ID = as.vector(t(as.matrix(port1[,-1]))))
View(portlong)
portlong <- portlong[complete.cases(portlong),]
portlong <- portlong[!duplicated(portlong$SIS.User.ID, fromLast = TRUE), ]
grpsize <- table(portlong$group)
grpsize
smallgroups <- names(grpsize)[grpsize < 4]
smallgroups
smallgroups <- grpsize[grpsize < 4]
smallgroups
df$SIS.User.ID[!df$SIS.User.ID %in% portlong$SIS.User.ID]
availablestudents <- df$SIS.User.ID[!df$SIS.User.ID %in% portlong$SIS.User.ID]
availablestudents
portlong$group[portlong$group %in% c("Bell Curve", "Supreme Alpha")] <- "Supreme/curves"
portlong$group
portlong$group[portlong$group %in% c("Bell Curve", "Supreme Alpha")] <- "Merged:Supreme/curves"
smallgroups <- grpsize[grpsize < 4]
smallgroups
grpsize <- table(portlong$group)
smallgroups <- grpsize[grpsize < 4]
smallgroups
availablestudents <- df$SIS.User.ID[!df$SIS.User.ID %in% portlong$SIS.User.ID]
availablestudents
sample(availablestudents)
data.frame(group = c(rep("anonymous", 3), rep("Neuroscience 999", 2)),
SIS.User.ID = sample(availablestudents))
portlong <- rbind(portlong,
data.frame(group = c(rep("anonymous", 3), rep("Neuroscience 999", 2)),
SIS.User.ID = sample(availablestudents)))
df2 <- merge(df, portlong, by = "SIS.User.ID", all = TRUE)
df2 <- df2[!duplicated(df2$SIS.User.ID), ]
all(table(df2$group) > 2 & table(df2$group) < 6)
table(df2$group)
table(df2$group.x)
table(table(df2$group.x))
sum(is.na(df2$group)) %% 4
df[["group"]] <- NULL
df2 <- merge(df, portlong, by = "SIS.User.ID", all = TRUE)
df2 <- df2[!duplicated(df2$SIS.User.ID), ]
sum(is.na(df2$group)) %% 4
worcs::check_worcs_installation("c:/tmp")
worcs::check_git()
df <- read.csv("C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio1.csv", stringsAsFactors = FALSE)
library(googlesheets4)
port1 <- read_sheet('https://docs.google.com/spreadsheets/d/1y-QI8f8MuWaGE_0PXOlBjlkp8HC7HWWkzBTHAUwxWFo/edit?resourcekey#gid=1935325333')
port1 <- port1[!port1$Timestamp < as.POSIXct(as.Date("9/27/23", "%m/%d/%y")), ]
port1[[1]] <- NULL
port1[[5]] <- unlist(port1[[5]])
port1[port1 == "0"] <- NA
ids <- unlist(port1[,-1])
missing_students <- na.omit(ids[!ids %in% df$SIS.User.ID])
for(i in missing_students){
possiblematch <- df$SIS.User.ID[which.min(stringdist::stringdist(i, df$SIS.User.ID))]
if(possiblematch %in% df$SIS.User.ID & ! possiblematch %in% ids){
port1[port1 == i] <- possiblematch
} else {
print(i)
}
}
ids <- unlist(port1[,-1])
missing_students <- na.omit(ids[!ids %in% df$SIS.User.ID])
missing_students
port1$`What's your group name?`[is.na(port1$`What's your group name?`)] <- make.unique(rep("anonymous", sum(is.na(port1$`What's your group name?`))))
names(port1) <- c("group", paste0("member.", 1:4))
portlong <- data.frame(group = rep(port1$group, each = 4),
SIS.User.ID = as.vector(t(as.matrix(port1[,-1]))))
portlong <- portlong[complete.cases(portlong),]
portlong <- portlong[!duplicated(portlong$SIS.User.ID, fromLast = TRUE), ]
grpsize <- table(portlong$group)
smallgroups <- grpsize[grpsize < 4]
smallgroups
availablestudents <- df$SIS.User.ID[!df$SIS.User.ID %in% portlong$SIS.User.ID]
availablestudents
portlong <- data.frame(group = rep(port1$group, each = 4),
SIS.User.ID = as.vector(t(as.matrix(port1[,-1]))))
portlong <- portlong[complete.cases(portlong),]
portlong <- portlong[!duplicated(portlong$SIS.User.ID, fromLast = TRUE), ]
grpsize <- table(portlong$group)
smallgroups <- grpsize[grpsize < 4]
availablestudents <- df$SIS.User.ID[!df$SIS.User.ID %in% portlong$SIS.User.ID]
portlong$group[portlong$group %in% c("Bell Curve", "Supreme Alpha")] <- "Merged:Supreme/curves"
smallgroups <- grpsize[grpsize < 4]
smallgroups
set.seed(6)
portlong <- rbind(portlong,
data.frame(group = c(rep("anonymous", 2), rep("Neuroscience 999", 2)),
SIS.User.ID = sample(availablestudents)))
df[["group"]] <- NULL
df2 <- merge(df, portlong, by = "SIS.User.ID", all = TRUE)
df2 <- df2[!duplicated(df2$SIS.User.ID), ]
sum(is.na(df2$group)) %% 4
df2$group
table(table(df2$group))
write.csv(df2, "C:/Users/vanlissa/OneDrive - Tilburg University/TU/Statistics 1 and 2 (LAS) - documenten/2023/portfolio2.csv", row.names = FALSE)
View(portlong)
library("RDCOMClient")
OutApp <- COMCreate("Outlook.Application")
g = df2$group[1]
outMail[["subject"]] = "Group 2 Composition"
outMail = OutApp$CreateItem(0)
outMail[["subject"]] = "Group 2 Composition"
adds <- df2$email[df2$group == g]
adds
adds <- unique(adds)
adds
adds <- adds[!is.na(adds)]
outMail[["To"]] = paste0(adds, collapse = "; ")
these <- df2[df2$group == g,]
missemail <- these$SIS.User.ID[is.na(these$email)]
cat(paste0(c("Dear students,",
"Please find the members of your group below. Note that, if you submitted a group with fewer than 4 members, you will have been assiged additional group members - please welcome them and remember that working together is an important part of this course.",
c("", paste0("I could not find some student numbers in the list of enrolled students; please contact me with their information: ", paste0(missemail, collapse = ", ")))[as.integer(isTRUE(length(missemail)>0))+1],
paste0("Group name: ", these$group[1]),
paste0("Student names: ", paste0(these$Name, collapse = ", ")),
paste0("Student emails: ", paste0(these$email, collapse = ", ")),
"Please get in touch with your group members ASAP, and try to work together during lectures and tutorials as much as possible, to get a head start on your portfolio!",
"All the best,",
"Caspar"), collapse = "\n"
))
for(g in unique(df2$group)){
outMail = OutApp$CreateItem(0)
outMail[["subject"]] = "Group 2 Composition"
#g = unique(df2$group)[2]
adds <- df2$email[df2$group == g]
adds <- unique(adds)
adds <- adds[!is.na(adds)]
outMail[["To"]] = paste0(adds, collapse = "; ")
these <- df2[df2$group == g,]
missemail <- these$SIS.User.ID[is.na(these$email)]
outMail[["body"]] =
paste0(c("Dear students,",
"Please find the members of your group below. Note that, if you submitted a group with fewer than 4 members, you will have been assiged additional group members - please welcome them and remember that working together is an important part of this course.",
c("", paste0("I could not find some student numbers in the list of enrolled students; please contact me with their information: ", paste0(missemail, collapse = ", ")))[as.integer(isTRUE(length(missemail)>0))+1],
paste0("Group name: ", these$group[1]),
paste0("Student names: ", paste0(these$Name, collapse = ", ")),
paste0("Student emails: ", paste0(these$email, collapse = ", ")),
"Please get in touch with your group members ASAP, and try to work together during lectures and tutorials as much as possible, to get a head start on your portfolio!",
"All the best,",
"Caspar"), collapse = "\n"
)
## send it
outMail$Send()
Sys.sleep(2)
}
