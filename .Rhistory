y = c(100, 60, 40),
label = ordered(c("Total Variance", "Common variance", "Unique variance")),
labely = c(50, 20, 70)
)
ggplot(df_plot, aes(fill=label, y=y, x=x, label = label)) +
geom_bar(position="stack", stat="identity", alpha = .2) +
geom_label(aes(y = labely), fill = "white") +
ggplot2::scale_x_reverse() +
ggplot2::scale_y_reverse()+
coord_flip() +
theme_void() +
labs(fill = "Variance") +
scale_fill_manual(values = c("Total Variance" = "green", "Common variance" = "blue", "Unique variance" = "red"))
df_plot <- data.frame(
x = c(1, 2, 2),
y = c(100, 60, 40),
label = ordered(c("Total Variance", "Common variance", "Unique variance")),
labely = c(50, 20, 70)
)
ggplot(df_plot, aes(fill=label, y=y, x=x, label = label)) +
geom_bar(position="stack", stat="identity", alpha = .8) +
geom_label(aes(y = labely), fill = "white") +
ggplot2::scale_x_reverse() +
ggplot2::scale_y_reverse()+
coord_flip() +
theme_void() +
labs(fill = "Variance") +
scale_fill_manual(values = c("Total Variance" = "green", "Common variance" = "blue", "Unique variance" = "red"))
df_plot <- data.frame(
x = c(1, 2, 2),
y = c(100, 60, 40),
label = ordered(c("Total Variance", "Common variance", "Unique variance")),
labely = c(50, 20, 70)
)
ggplot(df_plot, aes(fill=label, y=y, x=x, label = label)) +
geom_bar(position="stack", stat="identity", alpha = .5) +
geom_label(aes(y = labely), fill = "white") +
ggplot2::scale_x_reverse() +
ggplot2::scale_y_reverse()+
coord_flip() +
theme_void() +
labs(fill = "Variance") +
scale_fill_manual(values = c("Total Variance" = "green", "Common variance" = "blue", "Unique variance" = "red"))
read.table("clipboard")
tmp = read.table("clipboard")
sum(tmp^2)
tmp = read.table("clipboard")
View(tmp)
which.max(tmp)
which.max(unlist(tmp))
unlist(tmp)[33]
56107.93867
19217.19901
10883.57798
7562.907605
tmp = read.table("clipboard")
tmp
which.min9
which.min(tmp)
which.min(unlist(tmp))
which.min(unlist(read.clipboard("table")))
which.min(unlist(read.table("clipboard")))
sqrt(119.13 - 84)/sqrt((178 - 1)*84)
install.packages("rethinking")
remotes::install_github("mcelreath/rethinking")
remotes::install_github("rmcelreath/rethinking")
install.packages("cmdstanr")
remotes::install_github("rmcelreath/cmdstanr")
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
remotes::install_github("rmcelreath/rethinking")
rethinking::chimpanzees
library(rethinking) 10.1
library(rethinking)
library(rethinking)
data(chimpanzees)
head(chimpanzees)
dim(chimpanzees)
n = 300
n = 70
condition <- sample.int(2, n = n, replace = T)
condition <- sample.int(2, n = n, replace = T)
performance <- rnorm(n)
prosocial <- -.5 + condition*performance + rnorm(n)
n = 70
condition <- sample.int(2, n = n, replace = T)
performance <- rnorm(n)
prosocial <- -.5 + condition*performance + rnorm(n)
prosocial <- cut(prosocial, 2)
prosocial
set.seed(664)
n = 70
condition <- sample.int(2, n = n, replace = T)
performance <- rnorm(n)
prosocial <- -.5 + condition*performance + rnorm(n)
prosocial <- as.integer(cut(prosocial, 2))-1
set.seed(664)
n = 70
condition <- sample.int(2, n = n, replace = T)
performance <- rnorm(n)
prosocial <- -.5 + condition*performance + rnorm(n)
prosocial <- as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
condition <- sample.int(2, n = n, replace = T)
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- -.5 + condition*performance + rnorm(n)
prosocial <- as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- -.1 + condition*performance + rnorm(n)
prosocial <- as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- 3 + condition*performance + rnorm(n)
prosocial <- as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- 10 + condition*performance + rnorm(n)
prosocial <- as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- -10 + condition*performance + rnorm(n)
prosocial <- as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- -10 + condition*performance + rnorm(n)
prosocial <- rbinom(1, size = n, prob =  log(prosocial)/(1-log(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- -10 + condition*performance + rnorm(n)
prosocial <- rbinom(1, size = n, prob =  log(prosocial)/(1-log(prosocial)))
prosocial <- -10 + condition*performance + rnorm(n)
log(prosocial)
prosocial <- 10 + condition*performance + rnorm(n)
prosocial <- rbinom(1, size = n, prob =  log(prosocial)/(1-log(prosocial)))
10 + condition*performance + rnorm(n)
prosocial <- 10 + condition*performance + rnorm(n)
log(prosocial)
log(prosocial)/(1-log(prosocial))
exp(prosocial)/(1+exp(prosocial))
prosocial <- 2 + condition*performance + rnorm(n)
exp(prosocial)/(1+exp(prosocial))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- .2 + condition*performance + rnorm(n)
prosocial <- rbinom(1, size = n, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- .2 + condition*performance + rnorm(n)
prosocial <- rbinom(1, size = n, prob =  exp(prosocial)/(1+exp(prosocial)))
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- .2 + condition*performance + rnorm(n)
rbinom(1, size = n, prob =  exp(prosocial)/(1+exp(prosocial)))
rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- .2 + condition*performance + rnorm(n)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
summary(res)
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- .2 + condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n)
prosocial <- 0 + condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
condition*performance
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- 0 + condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -1 + condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 2*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.3*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.6*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 2*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.9*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.96*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.95*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.94*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.93*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.92*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
set.seed(664)
n = 70
condition <- sample.int(2, size = n, replace = T)
performance <- rnorm(n, .4)
prosocial <- -3 + 1.96*condition*performance + rnorm(n, .2)
prosocial <- rbinom(n = n, size = 1, prob =  exp(prosocial)/(1+exp(prosocial)))
# as.integer(cut(prosocial, 2))-1
res <- glm(prosocial ~ condition*performance, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
res <- glm(prosocial ~ 1, family = "binomial")
# summary(res)
exp(coef(res)[1])/(1+exp(coef(res)[1]))
65.13 + 95.27*15
65.13 + 15
15*65.13 + 95.27
22-7.33
(65.13 +7.33-22)/95.27
65.13+95.27*0.5296526
65.13-95.27*0.5296526
c(5,7)
5+2*1
5+1*2
tmp <- iris[1:100,]
tmp$Species <- droplevels(tmp$Species)
tmp2 <- model.matrix(~., tmp)
head(tmp2)
summary(lm(Sepal.Length~Speciesversicolor, tmp2))
summary(lm(Sepal.Length~Speciesversicolor, data.frame(tmp2)))
tmp3 <- tmp2
tmp3[, "Speciesversicolor"]
tmp3[, "Speciesversicolor"] <- 2*tmp3[, "Speciesversicolor"]
summary(lm(Sepal.Length~Speciesversicolor, data.frame(tmp3)))
5.66+1.5
12.5 + 2.3*5 + 1.8*3 - 0.5*2
sst = 1000; sse=150;ssr=850
sse+ssr
1-(ssr/sst)
1-(sse/sst)
ssr/sst
1-(150/600)
.75*150
.75*600
(150/600)
(70.989-67.586)/2.509
((283.957-202.758)/1) / 2.509
((283.957-202.758)/1) / (1242.537/386)
(283.957-202.758) / 1242.537
(283.957-202.758) / 1039.78
(283.957-202.758) / 958.58
(283.957-202.758) / (1039.78 - 958.58)
(283.957-202.758)
(283.957-202.758)/1
958.58/(387-4)
((283.957-202.758)/1)/(958.58/(387-4))
2.5/sqrt(80)
72+(1.96*2.5/sqrt(80))
72-(1.96*2.5/sqrt(80))
72-(2.5/sqrt(80))
72+(2.5/sqrt(80))
72+(1.96*2.5)
72-(1.96*2.5)
72-2.5
worcs::git_update("First complete draft")
worcs::git_update()
worcs::git_update()
schedule <- read.csv("schedule_notes.csv")[, 1:4]
schedule$Date <- as.Date(paste(2023, schedule$Week, 1, sep="-"), "%Y-%U-%u")
addthis <- c(0:5)
names(addthis) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
schedule$Date <- schedule$Date+addthis[schedule$Day]
schedule$Date <- format(schedule$Date, format = "%d-%m-%Y")
schedule <- schedule[!is.na(schedule$Week), c("Week", "Activity", "Date", "Topic")]
suppressWarnings(library(DT))
DT::datatable(schedule[order(schedule$Week, decreasing = FALSE), ], rownames = FALSE, options = list(pageLength = nrow(schedule)))
schedule <- read.csv("schedule_notes.csv")[, 1:4]
schedule$Date <- as.Date(paste(2023, schedule$Week, 1, sep="-"), "%Y-%U-%u")
addthis <- c(0:5)
names(addthis) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
schedule$Date <- schedule$Date+addthis[schedule$Day]
ordr <- order(schedule$Date, decreasing = FALSE)
ordr
head(schedule, 10)
schedule <- read.csv("schedule_notes.csv")[, 1:4]
schedule$Date <- as.Date(paste(2023, schedule$Week, 1, sep="-"), "%Y-%U-%u")
addthis <- c(0:5)
names(addthis) <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
schedule$Date <- schedule$Date+addthis[schedule$Day]
schedule <- schedule[!is.na(schedule$Week), c("Week", "Activity", "Date", "Topic")]
ordr <- order(schedule$Date, decreasing = FALSE)
schedule$Date <- format(schedule$Date, format = "%d-%m-%Y")
View(schedule)
tmp = schedule[ordr, ]
View(tmp)
mean(c(67,93))
mean(c(70,96))
mean(c(79,113))
mean(c(82,116))
worcs::git_update()
